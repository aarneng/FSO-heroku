{"version":3,"sources":["Phonebook/persons.jsx","Phonebook/AppEx1.jsx","index.jsx"],"names":["baseUrl","returnObject","getAll","axios","get","create","newObject","post","update","id","put","deleteByID","delete","Filter","props","value","search","onChange","handleSearchChange","PersonForm","onSubmit","handleSubmit","newName","handleNameChange","newPhoneNumber","handlePhoneNumberChange","type","Notification","message","console","log","error","className","ErrorMessage","Numbers","filteredNames","persons","filter","person","name","toLowerCase","includes","map","index","number","onClick","e","handleClick","App","useState","setPersons","useEffect","personService","then","response","data","setNewName","setNewPhoneNumber","setSearch","notification","setNotification","errorMessage","setErrorMessage","setNotificationAndTimeout","timeout","setTimeout","event","newVal","target","preventDefault","personIndex","window","confirm","updatedPersonObject","createdPerson","newPerson","list","updateOnePersonInList","catch","submittableObject","minId","idList","i","length","getCurrentPersonObject","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ae6d509.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = \"http://localhost:3001/api/persons\"\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteByID = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst returnObject = { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update,\r\n  deleteByID: deleteByID\r\n}\r\n\r\nexport default returnObject\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport personService from './persons'\r\nimport \"./styles.css\"\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n\r\n  useEffect(() => {\r\n    setPersonDataFromDB()\r\n  }, [])\r\n  \r\n  function setPersonDataFromDB() {\r\n    personService.getAll()\r\n      .then(response => {\r\n        setPersons(response.data)\r\n    })  \r\n  }\r\n\r\n  const [newName, setNewName] = useState(\"\")\r\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\")\r\n  const [search, setSearch] = useState(\"\")\r\n  const [notification, setNotification] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  function setNotificationAndTimeout(message, error=false, timeout=5000) {\r\n    // console.log(message);\r\n    if (!error) {\r\n      setNotification(message)\r\n      setTimeout(() => {\r\n        console.log(\"timed out\", timeout);\r\n        setNotification(null)\r\n      }, timeout)\r\n    }\r\n    else {\r\n      setErrorMessage(message)\r\n      setTimeout(() => {\r\n        console.log(\"timed out\", timeout);\r\n        setErrorMessage(null)\r\n      }, timeout)\r\n    }\r\n  }\r\n\r\n  function updateOnePersonInList(newPerson) {\r\n    let list = persons.filter(person => person.id !== newPerson.id)\r\n    setPersons([...list, newPerson])\r\n  }\r\n\r\n  function addPersonToDB(event) {\r\n    event.preventDefault();\r\n\r\n    for (const personIndex in persons) {\r\n      const person = persons[personIndex]\r\n      if (person.name.toLowerCase() !== newName.toLowerCase()) continue\r\n      // database doesn't contain the name we're looking for\r\n      console.log(person);\r\n      if (!window.confirm((`${newName} is already added to phonebook. replace old number with a new one?`))) \r\n        return  // stop excecution\r\n      \r\n      const updatedPersonObject = {...person, number: newPhoneNumber}\r\n      personService.update(person.id, updatedPersonObject)\r\n        .then( createdPerson => {\r\n          updateOnePersonInList(updatedPersonObject)\r\n        })\r\n        .catch(e => {\r\n          console.log(e.response.data);\r\n          setNotificationAndTimeout(e.response.data, true)\r\n        })\r\n        console.log(\"updated\");\r\n      // updateOnePersonInList(updatedPersonObject)\r\n      return  // stop excecution\r\n    }\r\n    if (newName === \"\" || newPhoneNumber === \"\") {\r\n      alert(`name and/or phone number cannot be empty!`)\r\n      return\r\n    }\r\n    \r\n    const submittableObject = getCurrentPersonObject()\r\n    personService.create(submittableObject) \r\n      .then(response => {\r\n        console.log(response.data)\r\n        setPersons([...persons, response.data])\r\n      })\r\n      .catch(e => {\r\n        setNotificationAndTimeout(e.response.data.error, true)\r\n        console.log(\"error\", e);\r\n      })\r\n    setNewName(\"\")\r\n    setNewPhoneNumber(\"\")\r\n  }\r\n\r\n  function removePerson(event, person) {\r\n    event.preventDefault();\r\n    const id = person.id;\r\n    console.log(id);\r\n    if (!window.confirm(\"Do you really want to delete this poor soul of a person\")) return\r\n    setNotificationAndTimeout(\"removed \" + person.name)\r\n    personService.deleteByID(id)\r\n      .catch(error => setErrorMessage(\"oh no! an error occured! :( the error says: \" + error.name + \": \" + error.message))\r\n    setPersons(persons.filter(person => person.id !== id))\r\n  }\r\n\r\n  function handleNameChange(event) {\r\n    const newVal = event.target ? event.target.value : \"\";\r\n    setNewName(newVal);\r\n  }\r\n\r\n  function handlePhoneNumberChange(event) {\r\n    // not sure if phone number should only have numbers so i'll allow everything until stated otherwise\r\n    const newVal = event.target ? event.target.value : \"\";\r\n    setNewPhoneNumber(newVal);\r\n  }\r\n\r\n  function handleSearchChange(event) {\r\n    const newVal = event.target ? event.target.value : \"\";\r\n    setSearch(newVal)\r\n  }\r\n\r\n  function getCurrentPersonObject() {\r\n    let minId = 1\r\n    let idList = persons.map(i => i.id)\r\n    for (let i = minId; i < persons.length + 10; i++) {\r\n      if (!idList.includes(i)) {\r\n        // O(n^2), could be optimised?\r\n        minId = i;\r\n        break\r\n      }\r\n    }\r\n    return { name: newName, number: newPhoneNumber, id: minId }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Filter \r\n        search={search} \r\n        handleSearchChange={handleSearchChange}\r\n      />\r\n      <h3>Add new name</h3>\r\n      \r\n      <PersonForm \r\n        handleSubmit={addPersonToDB} \r\n        newName={newName} \r\n        handleNameChange={handleNameChange} \r\n        newPhoneNumber={newPhoneNumber} \r\n        handlePhoneNumberChange={handlePhoneNumberChange}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Notification message={notification} />\r\n      <ErrorMessage message={errorMessage} />\r\n      <Numbers persons={persons} handleClick={removePerson} search={search}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <>\r\n      look for a name: \r\n      <input value={props.search} onChange={props.handleSearchChange} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newPhoneNumber} onChange={props.handlePhoneNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Notification = (props) => {\r\n  const message = props.message\r\n  if (message === null || message === \"\" || !message) {\r\n    return null\r\n  }\r\n  console.log(message);\r\n  if (props.error) {\r\n    return (\r\n      <div className=\"notification error\">\r\n        {message}\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"notification\">\r\n      {message}\r\n      <br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ErrorMessage = (props) => {\r\n  return <Notification message={props.message} error={true}/>\r\n}\r\n\r\nconst Numbers = (props) => {\r\n  // if (!props.persons.name) return <></>\r\n  const filteredNames = props.persons.filter( person => person.name.toLowerCase().includes( props.search.toLowerCase() ) )\r\n  return(\r\n    <>\r\n      {filteredNames.map((value, index) => \r\n      <div key={index}>\r\n        {value.name}: {value.number}\r\n        <button onClick={(e) => props.handleClick(e, value)} >kill this person</button>\r\n      </div>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport App from './Phonebook/AppEx1'\r\n\r\nReactDOM.render(\r\n  <App />, \r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}