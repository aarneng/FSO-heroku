{"version":3,"sources":["part-1/courseinfo/components/Header.jsx","part-1/courseinfo/components/Part.jsx","part-1/courseinfo/components/Content.jsx","part-1/courseinfo/components/Total.jsx","part-1/courseinfo/AppEx1.jsx","part-1/unicafe/AppEx2.jsx","part-1/anecdotes/AppEx3.jsx","part-1/AppPart1.js","part-2/courseinfo-continued/course.jsx","part-2/courseinfo-continued/AppEx1.jsx","part-2/Phonebook/persons.jsx","part-2/Phonebook/AppEx2.jsx","part-2/country_data/AppEx3.jsx","part-2/AppPart2.jsx","part-3/Phonebook/persons.jsx","part-3/Phonebook/AppEx1.jsx","part-3/AppPart3.jsx","part-4/AppPart4.jsx","part-5/AppPart5.jsx","part-6/AppPart6.jsx","part-7/AppPart7.jsx","part-8/AppPart8.jsx","part-9/AppPart9.jsx","part-10/AppPart10.jsx","part-11/AppPart11.jsx","App.jsx","index.jsx"],"names":["Header","props","course","Part","p","e","Content","parts","map","val","i","name","exercises","Total","sumExcercises","reduce","a","b","App","Statistics","total","text","value","good","neutral","bad","toFixed","Statistic","Button","useState","setGood","setNeutral","setBad","setTotal","updateRatings","goodnessScore","onClick","anecdotes","selected","setSelected","Array","length","fill","points","setPoints","bestIndex","setBestIndex","copy","indexOf","Math","max","vote","floor","random","showing","AppEx1","AppEx2","AppEx3","contentID","setContentID","courseName","sum","runningTotal","currentValue","index","part","Course","id","baseUrl","returnObject","getAll","axios","get","create","newObject","post","update","put","deleteByID","delete","Filter","search","onChange","handleSearchChange","PersonForm","onSubmit","handleSubmit","newName","handleNameChange","newPhoneNumber","handlePhoneNumberChange","type","Notification","notification","classStrName","error","className","message","Numbers","filteredNames","persons","filter","person","toLowerCase","includes","number","handleClick","setPersons","useEffect","console","log","personService","then","response","data","setNewName","setNewPhoneNumber","setSearch","setNotification","setNotificationAndTimeout","timeout","setTimeout","updateOnePersonInList","newPerson","list","event","newVal","target","personIndex","preventDefault","window","confirm","updatedPersonObject","submittableObject","minId","idList","getCurrentPersonObject","alert","catch","CountryInfo","filteredCountries","country","capital","src","flag","alt","style","height","CountryAltSpellings","altSpellings","CountryCurrencies","currencies","CountryWeather","weatherData","setWeatherData","countryData","Date","fetch","res","json","result","now","getTime","localStorage","weather","expireTime","parseInt","newExpireTime","setItem","countryDataLimitedAPIUsage","main","temp","countries","setCountries","availableSearches","setAvailableSearches","AppPart1","AppPart2","AppPart3","AppPart4","AppPart5","AppPart6","AppPart7","AppPart8","AppPart9","AppPart10","AppPart11","keys","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c16720c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = (props) => {\n  return (\n    <h1>{props.course}</h1>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Part = (props) => {\n  return (\n    <p>{props.p} {props.e}</p>\n  )\n}\n\nexport default Part\n","import React from 'react'\nimport Part from './Part'\n\nconst Content = (props) => {\n  // reading excercise 2, apparently map wasn't supposed to be used here yet. oh well.\n  return props.parts.map(\n    (val, i) => <Part p={val.name} e={val.exercises} key={i}/>\n  )\n}\n\nexport default Content\n","import React from 'react'\n\nconst Total = (props) => {\n  const sumExcercises = props.parts.map( i => i.exercises).reduce((a, b) => a + b, 0)\n  return (\n  <p>Number of exercises {sumExcercises}</p>\n  )\n}\n\nexport default Total\n","import React from 'react'\nimport Header from './components/Header'\nimport Content from './components/Content'\nimport Total from './components/Total'\n\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n\n  return (\n    <div>\n      <Header course={course.name} />\n      <Content parts={course.parts} />\n      <Total parts={course.parts}/>\n    </div>\n  )\n}\n\nexport default App\n","import React, { useState } from 'react'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0) // extra var for ease of following\n  \n\n  function updateRatings(goodnessScore) {\n    if (goodnessScore >= 1) setGood(good + 1)\n    if (goodnessScore === 0) setNeutral(neutral + 1)\n    if (goodnessScore <= -1) setBad(bad + 1)\n    setTotal(total + 1)\n  }\n\n  return (\n    <div>\n      <h2>Give feedback</h2>\n      {/* not quite sure if i am doing these buttons correctly */}\n      <div onClick={() => updateRatings(1)}>\n        <Button text={\"Set Good :)\"} />\n      </div>\n      <div onClick={() => updateRatings(0)}>\n        <Button text={\"Set neutral :/\"}/>\n      </div>\n      <div onClick={() => updateRatings(-1)}>\n        <Button text={\"Set bad :(\"}/>\n      </div>\n      <h2>stats</h2>\n        <Statistics good={good} neutral={neutral} bad={bad} total={total} />\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  if (props.total === 0) return <p>no feedback yet :(</p>\n  return (\n    <table>\n      <tbody>\n        <Statistic text=\"good\" value ={props.good} />\n        <Statistic text=\"neutral\" value ={props.neutral} />\n        <Statistic text=\"bad\" value ={props.bad} />\n        <Statistic text=\"total\" value ={props.total} />\n        <Statistic text=\"average\" value ={((props.good  - props.bad)/ props.total).toFixed(2)} />\n        <Statistic text=\"positive %\" value ={(100 * props.good / props.total).toFixed(0)} />\n      </tbody>\n    </table>\n  )\n}\n\nconst Statistic = (props) => {\n  return(\n    <tr>\n      <td>{props.text} </td>\n      <td> {props.value} <br/> </td>\n    </tr>\n  )\n}\n\nconst Button = (props) => {\n  return(\n    <button> {props.text} </button>\n  )\n}\n\n\nexport default App\n","import React, { useState } from 'react'\n\nconst App = () => {\n  const anecdotes = [\n    'If it hurts, do it more often',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n  ]\n  \n  const [selected, setSelected] = useState(0)\n  const [points, setPoints] = useState(new Array(anecdotes.length).fill(0));\n  const [bestIndex, setBestIndex] = useState(0);\n  \n  function randomAnecdote() {\n    setSelected(Math.floor(Math.random() * anecdotes.length))\n  }\n\n  function vote() {\n    const copy = [...points]\n    copy[selected] += 1\n    setPoints(copy);\n    \n    // update most voted-for anecdote\n    setBestIndex(copy.indexOf(Math.max(...copy)))\n    // this runs into RangeError on large enough arrays.\n    // change this function before app release\n  }\n\n  return (\n    <div>\n      <h2>Anecdote of the day:</h2>\n      {anecdotes[selected]}<br/>\n      votes: {points[selected]}<br/>\n      <button onClick={() => vote()}>vote</button>\n      <button onClick={() => randomAnecdote()}>next anecdote</button>\n      <h2>Voted as the best anecdote ever:</h2>\n      {anecdotes[bestIndex]} <br/>\n      with {points[bestIndex]} votes!\n    </div>\n  )\n}\n\nexport default App\n","import React, { useState } from 'react'\nimport AppEx1 from \"./courseinfo/AppEx1\"\nimport AppEx2 from \"./unicafe/AppEx2\"\nimport AppEx3 from \"./anecdotes/AppEx3\"\n\nfunction App() {\n  const [contentID, setContentID] = useState(0);\n\n  return(\n    <>\n      <button onClick={() => setContentID(0)}>course info</button>\n      <button onClick={() => setContentID(1)}>unicafe</button>\n      <button onClick={() => setContentID(2)}>anecdotes</button>\n      <br/>\n      <Content contentID={contentID}/>\n    </>\n  )\n}\n\n\nconst Content = (props) => {\n    let contents = [<AppEx1/>, <AppEx2/>, <AppEx3/>];\n\n    let showing = contents[props.contentID]\n\n    return (\n        <div> {showing} </div>\n    )\n}\n\n\nexport default App\n","import React from \"react\"\n\nconst Course = (props) => {\n  return(\n    <>\n      <Header courseName={props.course.name} />\n      <Content course={props.course} />\n      <Total course={props.course} />\n    </>\n  );\n}\n\nconst Header = ( props ) => {\n  return (\n    <h1>{props.courseName}</h1>\n  )\n}\n\nconst Total = ({ course }) => {\n  const sum = course.parts.reduce((runningTotal, currentValue) => runningTotal + currentValue.exercises, 0)\n  return(\n    <b>Number of exercises: {sum}</b>\n  ) \n}\n\nconst Content = ({ course }) => {\n  return (\n    <div>\n      {course.parts.map( (val, index) => <Part part={val} key={index}/>)}\n    </div>\n  )\n}\n\nconst Part = (props) => {\n  return (\n    <p>\n      {props.part.name} {props.part.exercises}\n    </p>    \n  )\n}\n\n\nexport default Course\n","import React from 'react';\nimport Course from \"./course\"\n\nfunction App() {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    <>\n      { courses.map( (course, index) => <Course course={course} key={index}/> ) }\n    </>\n  )\n}\n\n\nexport default App\n","import axios from 'axios'\nconst baseUrl = \"http://localhost:3001/api/persons\"\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deleteByID = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst returnObject = { \n  getAll: getAll, \n  create: create, \n  update: update,\n  deleteByID: deleteByID\n}\n\nexport default returnObject\n\n\n","import React, { useState, useEffect } from 'react'\nimport personService from './persons'\nimport \"./styles.css\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    setPersonDataFromDB()\n  }, [])\n  \n  function setPersonDataFromDB() {\n    console.log(\"getting persons...\")\n    personService.getAll()\n      .then(response => {\n        setPersons(response.data)\n        console.log(response)\n    })  \n  }\n\n  const [newName, setNewName] = useState(\"\")\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\")\n  const [search, setSearch] = useState(\"\")\n  const [notification, setNotification] = useState(null)\n\n  function setNotificationAndTimeout(message, error=false, timeout=7500) {\n    // console.log(\"ERROR\", message, error);\n    \n    setNotification({message: message, error: error})\n    setTimeout(() => {\n      console.log(\"timed out\", timeout);\n      setNotification(null)\n    }, timeout)\n    \n  }\n\n  function updateOnePersonInList(newPerson) {\n    let list = persons.filter(person => person.id !== newPerson.id)\n    setPersons([...list, newPerson])\n  }\n\n  function addPersonToDB(event) {\n    event.preventDefault();\n\n    for (const personIndex in persons) {\n      const person = persons[personIndex]\n      if (person.name.toLowerCase() !== newName.toLowerCase()) continue\n      // database doesn't contain the name we're looking for\n      console.log(person);\n      if (!window.confirm((`${newName} is already added to phonebook. replace old number with a new one?`))) return\n      \n      const updatedPersonObject = {...person, number: newPhoneNumber}\n      personService.update(person.id, updatedPersonObject)\n      updateOnePersonInList(updatedPersonObject)\n      setNotificationAndTimeout(\"Updated \" + person.name)\n      return\n    }\n    if (newName === \"\" || newPhoneNumber === \"\") {\n      alert(`name and/or phone number cannot be empty!`)\n      return\n    }\n    \n    const submittableObject = getCurrentPersonObject()\n    personService.create(submittableObject) \n      .then(response => {\n        console.log(response.data)\n        setPersons([...persons, response.data])\n      })\n    setNotificationAndTimeout(\"Added \" + submittableObject.name)\n    setNewName(\"\")\n    setNewPhoneNumber(\"\")\n  }\n\n  function removePerson(event, person) {\n    event.preventDefault();\n    const id = person.id;\n    console.log(id);\n    if (!window.confirm(\"Do you really want to delete this poor soul of a person\")) return\n    setNotificationAndTimeout(\"removed \" + person.name)\n    personService.deleteByID(id)\n      .catch(error => {setNotificationAndTimeout(\"oh no! an error occured! :( the error says: \" + error.name + \": \" + error.message, true);\n            console.log(error);} )\n    setPersons(persons.filter(person => person.id !== id))\n  }\n\n  function handleNameChange(event) {\n    const newVal = event.target ? event.target.value : \"\";\n    setNewName(newVal);\n  }\n\n  function handlePhoneNumberChange(event) {\n    // not sure if phone number should only have numbers so i'll allow everything until stated otherwise\n    const newVal = event.target ? event.target.value : \"\";\n    setNewPhoneNumber(newVal);\n  }\n\n  function handleSearchChange(event) {\n    const newVal = event.target ? event.target.value : \"\";\n    setSearch(newVal)\n  }\n\n  function getCurrentPersonObject() {\n    let minId = 1\n    let idList = persons.map(i => i.id)\n    for (let i = minId; i < persons.length + 10; i++) {\n      if (!idList.includes(i)) {\n        // O(n^2), could be optimised?\n        minId = i;\n        break\n      }\n    }\n    return { name: newName, number: newPhoneNumber, id: minId }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter \n        search={search} \n        handleSearchChange={handleSearchChange}\n      />\n      <h3>Add new name</h3>\n      \n      <PersonForm \n        handleSubmit={addPersonToDB} \n        newName={newName} \n        handleNameChange={handleNameChange} \n        newPhoneNumber={newPhoneNumber} \n        handlePhoneNumberChange={handlePhoneNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Notification notification={notification}/>\n      <Numbers persons={persons} handleClick={removePerson} search={search}/>\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <>\n      look for a name: \n      <input value={props.search} onChange={props.handleSearchChange} />\n    </>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          name: <input value={props.newName} onChange={props.handleNameChange} />\n        </div>\n        <div>\n          number: <input value={props.newPhoneNumber} onChange={props.handlePhoneNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst Notification = (props) => {\n  const notification = props.notification\n  if (notification === null || notification === \"\" || !notification) {\n    return null\n  }\n  let classStrName = notification.error ? \"notification error\" : \"notification\"\n\n  return (\n    <div className={classStrName}>\n      {notification.message}\n      <br/>\n    </div>\n  )\n}\n\nconst Numbers = (props) => {\n  const filteredNames = props.persons.filter( person => person.name.toLowerCase().includes( props.search.toLowerCase() ) )\n  return(\n    <>\n      {filteredNames.map((value, index) => \n      <div key={index}>\n        {value.name}: {value.number}\n        <button onClick={(e) => props.handleClick(e, value)} >kill this person</button>\n      </div>)}\n    </>\n  )\n}\n\nexport default App\n","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([])\n\n  useEffect(() => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n    }, []\n  )\n\n  const [availableSearches, setAvailableSearches] = useState([]);\n  function handleSearchChange(event) {\n    const filteredCountries = countries.filter(country => {\n      return country.name.toLowerCase().includes(event.target.value.toLowerCase())\n    }\n  )\n  setAvailableSearches(filteredCountries);\n  }\n  \n  return (\n    <>\n      look for a country:\n      <input onChange={handleSearchChange} />\n      <br/>\n      <CountryInfo filteredCountries={availableSearches} />\n    </>\n  )\n}\n\nconst CountryInfo = (props) => {\n  const filteredCountries = props.filteredCountries\n  if (filteredCountries.length === 0) return <>no data found :(</>\n\n  if (filteredCountries.length > 10) return <>Too much data to process! Try narrowing your search terms!</>\n\n  if (filteredCountries.length > 1) return (\n    <>\n      {filteredCountries.map( (val, index) => <div key={index}>{val.name}</div>)}\n    </>\n  )\n  const country = filteredCountries[0]\n  return (\n    <>\n      <h2>{country.name}</h2>\n      <CountryAltSpellings country={country}/>\n      <h3>capital: </h3>{country.capital}\n      <h3>flag: </h3><img src={country.flag} alt=\"\" style={{height: \"100px\"}}/>\n      <CountryCurrencies country={country}/>\n      <CountryWeather country={country}/>\n    </>\n  )\n}\n\nconst CountryAltSpellings = (props) => {\n  if (props.country.altSpellings.length > 0) {\n    return (\n    <>\n      <h3>also knows as: </h3>{props.country.altSpellings.map( (val, index) => <div key={index}>{val}</div> )}\n    </>\n  )}\n  return <></>\n}\n\nconst CountryCurrencies = (props) => {\n  if (props.country.currencies.length > 0) return (\n    <>\n      <h3>currencies: </h3>{props.country.currencies.map( (val, index) => <div key={index}>{val.name}</div> )}\n    </>\n  )\n  return <></>\n}\n\nconst CountryWeather = (props) => {\n  const apiKey = process.env.REACT_APP_API_KEY\n  // using openweathermap.org\n  function getApiCallURL() {\n    if (!props.country.capital) return \"\"\n    return \"https://api.openweathermap.org/data/2.5/weather?q=\" + props.country.capital + \"&APPID=\" + apiKey;\n  }\n\n  const [weatherData, setWeatherData] = useState()\n\n  function countryData() {\n    console.log(\"fetching data...\", new Date());\n    fetch(getApiCallURL())\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setWeatherData(result)\n        },\n        (error) => {\n          console.log(\"error\");\n    });\n  }\n  \n  function countryDataLimitedAPIUsage() {\n    let now = new Date().getTime(); // number of milliseconds since the 60's ended in London\n    const oneMinute = 1000 * 60;\n\n    if (localStorage.weather && localStorage.expireTime && parseInt(localStorage.expireTime) > now) {\n      console.log(\"visit was too recent\");\n      return (<>\n        <h3>current temperature at capital: </h3> Limiting API usage :(\n      </>)\n    }\n    else {\n      let data = countryData();\n      let newExpireTime = now + oneMinute;\n      localStorage.setItem(\"weather\", data);\n      localStorage.setItem(\"expireTime\", newExpireTime);\n\n      console.log(`First visit (since storage was cleared).`);\n      setWeatherData(data);\n    }\n  }\n  countryDataLimitedAPIUsage()\n  if (typeof weatherData != \"undefined\") {\n    return (<>\n      <h3>current temperature at capital: </h3> {(weatherData.main.temp - 273.15).toFixed(0)}°C\n    </>)\n  }\n  else return <>Api usage is too high... </>\n}\n\nexport default App\n","import React, { useState } from 'react'\nimport AppEx1 from \"./courseinfo-continued/AppEx1\"\nimport AppEx2 from \"./Phonebook/AppEx2\"\nimport AppEx3 from \"./country_data/AppEx3\"\n\nfunction App() {\n  const [contentID, setContentID] = useState(0);\n\n  return(\n    <>\n      <button onClick={() => setContentID(0)}>course info continued</button>\n      <button onClick={() => setContentID(1)}>Phonebook</button>\n      <button onClick={() => setContentID(2)}>country data</button>\n      <br/>\n      <Content contentID={contentID}/>\n    </>\n  )\n}\n\n\nconst Content = (props) => {\n    let contents = [<AppEx1/>, <AppEx2/>, <AppEx3/>];\n\n    let showing = contents[props.contentID]\n\n    return (\n        <div> {showing} </div>\n    )\n}\n\n\nexport default App\n","import axios from 'axios'\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deleteByID = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst returnObject = { \n  getAll: getAll, \n  create: create, \n  update: update,\n  deleteByID: deleteByID\n}\n\nexport default returnObject\n\n\n","import React, { useState, useEffect } from 'react'\nimport personService from './persons'\nimport \"./styles.css\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    setPersonDataFromDB()\n  }, [])\n  \n  function setPersonDataFromDB() {\n    console.log(\"getting persons...\")\n    personService.getAll()\n      .then(response => {\n        setPersons(response.data)\n        console.log(response)\n    })  \n  }\n\n  const [newName, setNewName] = useState(\"\")\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\")\n  const [search, setSearch] = useState(\"\")\n  const [notification, setNotification] = useState(null)\n\n  function setNotificationAndTimeout(message, error=false, timeout=7500) {\n    // console.log(\"ERROR\", message, error);\n    \n    setNotification({message: message, error: error})\n    setTimeout(() => {\n      console.log(\"timed out\", timeout);\n      setNotification(null)\n    }, timeout)\n    \n  }\n\n  function updateOnePersonInList(newPerson) {\n    let list = persons.filter(person => person.id !== newPerson.id)\n    setPersons([...list, newPerson])\n  }\n\n  function addPersonToDB(event) {\n    event.preventDefault();\n\n    for (const personIndex in persons) {\n      const person = persons[personIndex]\n      if (person.name.toLowerCase() !== newName.toLowerCase()) continue\n      // database doesn't contain the name we're looking for\n      console.log(person);\n      if (!window.confirm((`${newName} is already added to phonebook. replace old number with a new one?`))) return\n      \n      const updatedPersonObject = {...person, number: newPhoneNumber}\n      personService.update(person.id, updatedPersonObject)\n      updateOnePersonInList(updatedPersonObject)\n      setNotificationAndTimeout(\"Updated \" + person.name)\n      return\n    }\n    if (newName === \"\" || newPhoneNumber === \"\") {\n      alert(`name and/or phone number cannot be empty!`)\n      return\n    }\n    \n    const submittableObject = getCurrentPersonObject()\n    personService.create(submittableObject) \n      .then(response => {\n        console.log(response.data)\n        setPersons([...persons, response.data])\n      })\n    setNotificationAndTimeout(\"Added \" + submittableObject.name)\n    setNewName(\"\")\n    setNewPhoneNumber(\"\")\n  }\n\n  function removePerson(event, person) {\n    event.preventDefault();\n    const id = person.id;\n    console.log(id);\n    if (!window.confirm(\"Do you really want to delete this poor soul of a person\")) return\n    setNotificationAndTimeout(\"removed \" + person.name)\n    personService.deleteByID(id)\n      .catch(error => {setNotificationAndTimeout(\"oh no! an error occured! :( the error says: \" + error.name + \": \" + error.message, true);\n            console.log(error);} )\n    setPersons(persons.filter(person => person.id !== id))\n  }\n\n  function handleNameChange(event) {\n    const newVal = event.target ? event.target.value : \"\";\n    setNewName(newVal);\n  }\n\n  function handlePhoneNumberChange(event) {\n    // not sure if phone number should only have numbers so i'll allow everything until stated otherwise\n    const newVal = event.target ? event.target.value : \"\";\n    setNewPhoneNumber(newVal);\n  }\n\n  function handleSearchChange(event) {\n    const newVal = event.target ? event.target.value : \"\";\n    setSearch(newVal)\n  }\n\n  function getCurrentPersonObject() {\n    let minId = 1\n    let idList = persons.map(i => i.id)\n    for (let i = minId; i < persons.length + 10; i++) {\n      if (!idList.includes(i)) {\n        // O(n^2), could be optimised?\n        minId = i;\n        break\n      }\n    }\n    return { name: newName, number: newPhoneNumber, id: minId }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter \n        search={search} \n        handleSearchChange={handleSearchChange}\n      />\n      <h3>Add new name</h3>\n      \n      <PersonForm \n        handleSubmit={addPersonToDB} \n        newName={newName} \n        handleNameChange={handleNameChange} \n        newPhoneNumber={newPhoneNumber} \n        handlePhoneNumberChange={handlePhoneNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Notification notification={notification}/>\n      <Numbers persons={persons} handleClick={removePerson} search={search}/>\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <>\n      look for a name: \n      <input value={props.search} onChange={props.handleSearchChange} />\n    </>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          name: <input value={props.newName} onChange={props.handleNameChange} />\n        </div>\n        <div>\n          number: <input value={props.newPhoneNumber} onChange={props.handlePhoneNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst Notification = (props) => {\n  const notification = props.notification\n  if (notification === null || notification === \"\" || !notification) {\n    return null\n  }\n  let classStrName = notification.error ? \"notification error\" : \"notification\"\n\n  return (\n    <div className={classStrName}>\n      {notification.message}\n      <br/>\n    </div>\n  )\n}\n\nconst Numbers = (props) => {\n  const filteredNames = props.persons.filter( person => person.name.toLowerCase().includes( props.search.toLowerCase() ) )\n  return(\n    <>\n      {filteredNames.map((value, index) => \n      <div key={index}>\n        {value.name}: {value.number}\n        <button onClick={(e) => props.handleClick(e, value)} >kill this person</button>\n      </div>)}\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport Phonebook from \"./Phonebook/AppEx1\"\n\n\nfunction App() {\n  \n  return(\n    <Phonebook/>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react'\n\n\n\nfunction App() {\n  \n  return(\n    <>\n      Not implemented yet...\n    </>\n  )\n}\n\n\nexport default App\n","import React, { useState } from 'react'\nimport AppPart1 from \"./part-1/AppPart1\"\nimport AppPart2 from \"./part-2/AppPart2\"\nimport AppPart3 from \"./part-3/AppPart3\"\nimport AppPart4 from \"./part-4/AppPart4\"\nimport AppPart5 from \"./part-5/AppPart5\"\nimport AppPart6 from \"./part-6/AppPart6\"\nimport AppPart7 from \"./part-7/AppPart7\"\nimport AppPart8 from \"./part-8/AppPart8\"\nimport AppPart9 from \"./part-9/AppPart9\"\nimport AppPart10 from \"./part-10/AppPart10\"\nimport AppPart11 from \"./part-11/AppPart11\"\n\nfunction App() {\n  const [contentID, setContentID] = useState(0);\n  return(\n    <>\n    {\n      ([...Array(11).keys()]).map( (val, i) => (\n        <button onClick={() => setContentID(i)} key={i}>Part {val + 1}</button>\n      ))\n    }\n      <br/>\n      <Content contentID={contentID}/>\n    </>\n  )\n}\n\n\nconst Content = (props) => {\n    let contents = [<AppPart1/>, <AppPart2/>, <AppPart3/>, <AppPart4/>, <AppPart5/>, <AppPart6/>, <AppPart7/>, <AppPart8/>, <AppPart9/>, <AppPart10/>, <AppPart11/>];\n\n    let showing = contents[props.contentID]\n\n    return (\n        <div> {showing} </div>\n    )\n}\n\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}